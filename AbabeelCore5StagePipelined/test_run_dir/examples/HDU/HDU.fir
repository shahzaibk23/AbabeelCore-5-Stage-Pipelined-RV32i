;buildInfoPackage: chisel3, version: 3.1.8, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2019-07-08 17:44:42.884, builtAtMillis: 1562607882884
circuit HDU : 
  module HDU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip exRegWrite : UInt<1>, flip exRd : UInt<5>, flip idRs1 : UInt<5>, flip idRs2 : UInt<5>, flip operandAsel : UInt<2>, flip operandBsel : UInt<1>, flip hazard : UInt<1>, flip memRegWrite : UInt<1>, flip memRd : UInt<5>, forwardA : UInt<2>, forwardB : UInt<2>}
    
    io.forwardA <= UInt<1>("h00") @[HDU.scala 28:21]
    io.forwardB <= UInt<1>("h00") @[HDU.scala 29:21]
    node _T_30 = eq(io.memRegWrite, UInt<1>("h01")) @[HDU.scala 32:29]
    node _T_32 = neq(io.memRd, UInt<1>("h00")) @[HDU.scala 32:52]
    node _T_33 = and(_T_30, _T_32) @[HDU.scala 32:40]
    node _T_34 = eq(io.memRd, io.idRs1) @[HDU.scala 32:80]
    node _T_35 = eq(io.memRd, io.idRs2) @[HDU.scala 32:105]
    node _T_36 = and(_T_34, _T_35) @[HDU.scala 32:93]
    node _T_37 = and(_T_33, _T_36) @[HDU.scala 32:67]
    when _T_37 : @[HDU.scala 32:119]
      io.forwardA <= UInt<2>("h02") @[HDU.scala 33:29]
      io.forwardB <= UInt<2>("h02") @[HDU.scala 34:29]
      skip @[HDU.scala 32:119]
    else : @[HDU.scala 35:98]
      node _T_41 = eq(io.memRegWrite, UInt<1>("h01")) @[HDU.scala 35:35]
      node _T_43 = neq(io.memRd, UInt<1>("h00")) @[HDU.scala 35:58]
      node _T_44 = and(_T_41, _T_43) @[HDU.scala 35:46]
      node _T_45 = eq(io.memRd, io.idRs1) @[HDU.scala 35:85]
      node _T_46 = and(_T_44, _T_45) @[HDU.scala 35:73]
      when _T_46 : @[HDU.scala 35:98]
        io.forwardA <= UInt<2>("h02") @[HDU.scala 36:29]
        skip @[HDU.scala 35:98]
      else : @[HDU.scala 37:98]
        node _T_49 = eq(io.memRegWrite, UInt<1>("h01")) @[HDU.scala 37:35]
        node _T_51 = neq(io.memRd, UInt<1>("h00")) @[HDU.scala 37:58]
        node _T_52 = and(_T_49, _T_51) @[HDU.scala 37:46]
        node _T_53 = eq(io.memRd, io.idRs2) @[HDU.scala 37:85]
        node _T_54 = and(_T_52, _T_53) @[HDU.scala 37:73]
        when _T_54 : @[HDU.scala 37:98]
          io.forwardB <= UInt<2>("h02") @[HDU.scala 38:29]
          skip @[HDU.scala 37:98]
    node _T_57 = eq(io.exRegWrite, UInt<1>("h01")) @[HDU.scala 44:28]
    node _T_59 = neq(io.exRd, UInt<1>("h00")) @[HDU.scala 44:50]
    node _T_60 = and(_T_57, _T_59) @[HDU.scala 44:39]
    node _T_61 = eq(io.exRd, io.idRs1) @[HDU.scala 44:77]
    node _T_62 = eq(io.exRd, io.idRs2) @[HDU.scala 44:101]
    node _T_63 = and(_T_61, _T_62) @[HDU.scala 44:90]
    node _T_64 = and(_T_60, _T_63) @[HDU.scala 44:65]
    when _T_64 : @[HDU.scala 44:115]
      io.forwardA <= UInt<1>("h01") @[HDU.scala 45:29]
      io.forwardB <= UInt<1>("h01") @[HDU.scala 46:29]
      skip @[HDU.scala 44:115]
    else : @[HDU.scala 47:95]
      node _T_68 = eq(io.exRegWrite, UInt<1>("h01")) @[HDU.scala 47:34]
      node _T_70 = neq(io.exRd, UInt<1>("h00")) @[HDU.scala 47:56]
      node _T_71 = and(_T_68, _T_70) @[HDU.scala 47:45]
      node _T_72 = eq(io.exRd, io.idRs1) @[HDU.scala 47:82]
      node _T_73 = and(_T_71, _T_72) @[HDU.scala 47:71]
      when _T_73 : @[HDU.scala 47:95]
        io.forwardA <= UInt<1>("h01") @[HDU.scala 48:29]
        skip @[HDU.scala 47:95]
      else : @[HDU.scala 49:95]
        node _T_76 = eq(io.exRegWrite, UInt<1>("h01")) @[HDU.scala 49:34]
        node _T_78 = neq(io.exRd, UInt<1>("h00")) @[HDU.scala 49:56]
        node _T_79 = and(_T_76, _T_78) @[HDU.scala 49:45]
        node _T_80 = eq(io.exRd, io.idRs2) @[HDU.scala 49:82]
        node _T_81 = and(_T_79, _T_80) @[HDU.scala 49:71]
        when _T_81 : @[HDU.scala 49:95]
          io.forwardB <= UInt<1>("h01") @[HDU.scala 50:29]
          skip @[HDU.scala 49:95]
    
